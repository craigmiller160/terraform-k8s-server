apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-config
data:
  MONGO_HOST: mongodb-service
  MONGO_AUTH_DB: admin
  MONGO_PORT: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  revisionHistoryLimit: 0
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      initContainers:
        - name: prepare-certs
          image: busybox:1.28
          imagePullPolicy: IfNotPresent
          command: [
            "sh",
            "-c",
            "cat /certs-secret/tls.crt > /certs/mongodb.pem && cat /certs-secret/tls.key >> /certs/mongodb.pem"
          ]
          volumeMounts:
            - mountPath: /certs-secret
              name: mongodb-certs-secret-volume
            - mountPath: /certs
              name: mongodb-certs-volume
      containers:
        - name: mongodb
          image: mongo:4.4.2
          imagePullPolicy: IfNotPresent
          args:
            - --tlsMode
            - requireTLS
            - --tlsCertificateKeyFile
            - /certs/mongodb.pem
          ports:
            - containerPort: 27017
          envFrom:
            - configMapRef:
                name: mongodb-config
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-root-account
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-root-account
                  key: password
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  type: NodePort
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017
      nodePort: 27017