apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: default
spec:
  revisionHistoryLimit: 0
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      initContainers:
        - name: prepare-certs
          image: busybox:1.28
          imagePullPolicy: IfNotPresent
          command: [
            "sh",
            "-c",
            "cp /certs-secret/* /certs && chmod 600 /certs/* && chown 999 /certs/*"
          ]
          volumeMounts:
            - mountPath: /certs-secret
              name: postgres-certs-secret-volume
            - mountPath: /certs
              name: postgres-certs-volume
      containers:
        - name: postgres
          image: postgres:12.5
          imagePullPolicy: IfNotPresent
          args:
            - "-c"
            - "ssl=on"
            - "-c"
            - "ssl_cert_file=/var/lib/postgresql/certs/tls.crt"
            - "-c"
            - "ssl_key_file=/var/lib/postgresql/certs/tls.key"
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-root-account
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-root-account
                  key: password
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-volume
            - mountPath: /var/lib/postgresql/certs
              name: postgres-certs-volume
      volumes:
        - name: postgres-volume
          hostPath:
            path: /opt/kubernetes/data/postgres
        - name: postgres-certs-volume
          emptyDir: {}
        - name: postgres-certs-secret-volume
          secret:
            secretName: database-tls-certs
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: default
spec:
  type: NodePort
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
      nodePort: 30001
